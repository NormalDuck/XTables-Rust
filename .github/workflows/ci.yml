name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  fmt:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Check Formatting
        run: cargo fmt --all -- --check

  ci:
    needs: ["fmt"]
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Linux x86_64
            runner-os: ubuntu-22.04
            cargo-target: x86_64-unknown-linux-gnu
            run-tests: true

          - name: Linux aarch64
            runner-os: ubuntu-22.04-arm
            cargo-target: aarch64-unknown-linux-gnu
            run-tests: false

          - name: macOS x86_64
            runner-os: macos-15
            cargo-target: x86_64-apple-darwin
            run-tests: true

          - name: macOS aarch64
            runner-os: macos-15
            cargo-target: aarch64-apple-darwin
            run-tests: true

          - name: Windows x86_64
            runner-os: windows-2022
            cargo-target: x86_64-pc-windows-msvc
            run-tests: true

          - name: Windows aarch64
            runner-os: windows-11-arm
            cargo-target: aarch64-pc-windows-msvc
            run-tests: false

    name: CI - ${{ matrix.name }}
    runs-on: ${{ matrix.runner-os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
          targets: ${{ matrix.cargo-target }}

      - name: Install Proto
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build workspace
        run: |
          cargo build \
            --workspace \
            --locked --all-features \
            --target ${{ matrix.cargo-target }}

      - name: Lint workspace
        run: |
          cargo clippy \
            --workspace \
            --locked --all-features \
            --target ${{ matrix.cargo-target }} \
            -- -D warnings

      - name: Test workspace
        if: matrix.run-tests == true
        run: |
          cargo test \
            --workspace \
            --locked --all-features
